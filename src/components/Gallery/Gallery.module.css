/* Gallery Component Styles */
@import '../../constants/css-variables.css';

.gallery {
  padding: 120px 0;
  background: var(--color-bg-primary);
  position: relative;
  overflow: hidden;
}

.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 24px;
}

/* Section Header */
.header {
  text-align: center;
  margin-bottom: 80px;
}

.title {
  font-family: var(--font-family-primary);
  font-size: clamp(3rem, 6vw, 4.5rem);
  font-weight: var(--font-weight-regular);
  color: var(--color-primary-main);
  text-transform: uppercase;
  margin-bottom: 24px;
  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
}

.subtitle {
  font-family: var(--font-family-secondary);
  font-size: clamp(1.1rem, 2vw, 1.3rem);
  color: var(--color-text-light);
  line-height: 1.6;
  max-width: 600px;
  margin: 0 auto;
  opacity: 0.9;
}

/* Filter Buttons */
.filters {
  display: flex;
  justify-content: center;
  gap: 16px;
  margin-bottom: 60px;
  flex-wrap: wrap;
}

.filterButton {
  background: transparent;
  color: var(--color-text-light);
  font-family: var(--font-family-secondary);
  font-size: 16px;
  font-weight: var(--font-weight-regular);
  padding: 12px 24px;
  border: 2px solid var(--color-accent-light-gray);
  border-radius: 50px;
  cursor: pointer;
  transition: all 0.3s ease;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.filterButton:hover {
  border-color: var(--color-primary-main);
  color: var(--color-primary-main);
  transform: translateY(-2px);
}

.filterButton.active {
  background: var(--color-primary-main);
  color: #292D32;
  border-color: var(--color-primary-main);
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(254, 119, 45, 0.3);
}

/* Gallery Grid */
.grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 24px;
  margin-bottom: 60px;
}

.imageItem {
  cursor: pointer;
  border-radius: 16px;
  overflow: hidden;
  background: var(--color-accent-dark-gray);
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
  transition: all 0.3s ease;
}

.imageItem:hover {
  box-shadow: 0 8px 30px rgba(254, 119, 45, 0.2);
}

.imageWrapper {
  position: relative;
  aspect-ratio: 4/3;
  overflow: hidden;
}

.image {
  object-fit: cover;
  transition: transform 0.5s ease;
}

.imageItem:hover .image {
  transform: scale(1.1);
}

/* Image Overlay */
.overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    to bottom,
    transparent 0%,
    transparent 50%,
    rgba(0, 0, 0, 0.8) 100%
  );
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  padding: 24px;
  opacity: 0;
  transition: opacity 0.3s ease;
}

.imageItem:hover .overlay {
  opacity: 1;
}

.imageTitle {
  font-family: var(--font-family-secondary);
  font-size: 18px;
  font-weight: var(--font-weight-medium);
  color: var(--color-text-light);
  margin-bottom: 8px;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.viewButton {
  display: flex;
  align-items: center;
  gap: 8px;
}

.viewButton span {
  font-family: var(--font-family-secondary);
  font-size: 14px;
  color: var(--color-primary-main);
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.viewButton::after {
  content: 'â†’';
  color: var(--color-primary-main);
  font-size: 16px;
  transition: transform 0.3s ease;
}

.imageItem:hover .viewButton::after {
  transform: translateX(4px);
}

/* Lightbox */
.lightbox {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.9);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  padding: 20px;
}

.lightboxContent {
  position: relative;
  max-width: 90vw;
  max-height: 90vh;
  aspect-ratio: 4/3;
  border-radius: 12px;
  overflow: hidden;
  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.5);
}

.lightboxImage {
  object-fit: contain;
}

.closeButton {
  position: absolute;
  top: 16px;
  right: 16px;
  width: 40px;
  height: 40px;
  background: rgba(0, 0, 0, 0.7);
  color: var(--color-text-light);
  border: none;
  border-radius: 50%;
  font-size: 24px;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.3s ease;
  z-index: 1001;
}

.closeButton:hover {
  background: var(--color-primary-main);
  color: #292D32;
  transform: scale(1.1);
}

/* Responsive Design */
@media (max-width: 768px) {
  .gallery {
    padding: 80px 0;
  }

  .container {
    padding: 0 16px;
  }

  .header {
    margin-bottom: 60px;
  }

  .filters {
    gap: 12px;
    margin-bottom: 40px;
  }

  .filterButton {
    font-size: 14px;
    padding: 10px 20px;
  }

  .grid {
    grid-template-columns: 1fr;
    gap: 20px;
    margin-bottom: 40px;
  }

  .imageItem {
    border-radius: 12px;
  }

  .overlay {
    padding: 20px;
  }

  .imageTitle {
    font-size: 16px;
  }

  .lightboxContent {
    max-width: 95vw;
    max-height: 85vh;
  }

  .closeButton {
    top: 12px;
    right: 12px;
    width: 36px;
    height: 36px;
    font-size: 20px;
  }
}

@media (max-width: 480px) {
  .gallery {
    padding: 60px 0;
  }

  .filters {
    flex-direction: column;
    align-items: center;
    gap: 8px;
  }

  .filterButton {
    width: 100%;
    max-width: 200px;
  }

  .grid {
    gap: 16px;
  }

  .overlay {
    padding: 16px;
  }

  .imageTitle {
    font-size: 14px;
  }

  .viewButton span {
    font-size: 12px;
  }
}

/* Grid Layout Variations */
@media (min-width: 769px) {
  .grid {
    grid-template-columns: repeat(2, 1fr);
  }
}

@media (min-width: 1024px) {
  .grid {
    grid-template-columns: repeat(3, 1fr);
  }
}

@media (min-width: 1400px) {
  .grid {
    grid-template-columns: repeat(4, 1fr);
  }
}

/* Loading States */
.imageItem.loading {
  background: var(--color-accent-medium-gray);
  animation: pulse 1.5s ease-in-out infinite;
}

@keyframes pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.7;
  }
}

/* Focus States for Accessibility */
.filterButton:focus,
.imageItem:focus,
.closeButton:focus {
  outline: 2px solid var(--color-primary-main);
  outline-offset: 2px;
}

/* Reduced Motion */
@media (prefers-reduced-motion: reduce) {
  .image,
  .overlay,
  .viewButton::after {
    transition: none;
  }
  
  .imageItem:hover .image {
    transform: none;
  }
  
  .imageItem:hover .viewButton::after {
    transform: none;
  }
}